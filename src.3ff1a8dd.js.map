{"version":3,"sources":["../node_modules/prelude-ls/lib/Func.js","../node_modules/prelude-ls/lib/List.js","../node_modules/prelude-ls/lib/Obj.js","../node_modules/prelude-ls/lib/Str.js","../node_modules/prelude-ls/lib/Num.js","../node_modules/prelude-ls/lib/index.js","index.js"],"names":["apply","curry","flip","fix","over","memoize","slice$","slice","toString$","toString","curry$","f","bound","context","_curry","args","length","params","concat","push","arguments","call","list","x","y","g","memo","key","arg","i$","ref$","len$","results$","join","module","exports","each","map","compact","filter","reject","partition","find","head","first","tail","last","initial","empty","reverse","unique","uniqueBy","fold","foldl","fold1","foldl1","foldr","foldr1","unfoldr","concatMap","flatten","difference","intersection","union","countBy","groupBy","andList","orList","any","all","sort","sortWith","sortBy","sum","product","mean","average","maximum","minimum","maximumBy","minimumBy","scan","scanl","scan1","scanl1","scanr","scanr1","take","drop","splitAt","takeWhile","dropWhile","span","breakList","zip","zipWith","zipAll","zipAllWith","at","elemIndex","elemIndices","findIndex","findIndices","in$","xs","i","l","compose$","functions","result","not$","passed","failed","seen","val","b","that","xss","yss","results","j$","len1$","outer","max","min","n","p","len","ys","minLength","lresult$","undefined","fn$","el","values","keys","pairsToObj","objToPairs","listsToObj","objToLists","object","resultObj$","value","k","split","lines","unlines","words","unwords","chars","unchars","repeat","capitalize","camelize","dasherize","sep","str","it","charAt","toUpperCase","replace","arg$","c","lower","upper","toLowerCase","negate","abs","signum","quot","rem","div","mod","recip","pi","tau","exp","sqrt","ln","pow","sin","tan","cos","asin","acos","atan","atan2","truncate","round","ceiling","floor","isItNaN","even","odd","gcd","lcm","x$","y$","Math","PI","log","ceil","z","Func","List","Obj","Str","Num","id","isType","replicate","prelude","require","type","breakStr","VERSION","CountdownTimer","selector","targetDate","Date","daysHTML","document","querySelector","hoursHTML","minsHTML","secsHTML","getTime","time","days","hours","mins","secs","setInterval","currentTime","now","console","textContent"],"mappings":"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","file":"src.3ff1a8dd.js","sourceRoot":"../src","sourcesContent":["// Generated by LiveScript 1.4.0\nvar apply, curry, flip, fix, over, memoize, slice$ = [].slice, toString$ = {}.toString;\napply = curry$(function(f, list){\n  return f.apply(null, list);\n});\ncurry = function(f){\n  return curry$(f);\n};\nflip = curry$(function(f, x, y){\n  return f(y, x);\n});\nfix = function(f){\n  return function(g){\n    return function(){\n      return f(g(g)).apply(null, arguments);\n    };\n  }(function(g){\n    return function(){\n      return f(g(g)).apply(null, arguments);\n    };\n  });\n};\nover = curry$(function(f, g, x, y){\n  return f(g(x), g(y));\n});\nmemoize = function(f){\n  var memo;\n  memo = {};\n  return function(){\n    var args, key, arg;\n    args = slice$.call(arguments);\n    key = (function(){\n      var i$, ref$, len$, results$ = [];\n      for (i$ = 0, len$ = (ref$ = args).length; i$ < len$; ++i$) {\n        arg = ref$[i$];\n        results$.push(arg + toString$.call(arg).slice(8, -1));\n      }\n      return results$;\n    }()).join('');\n    return memo[key] = key in memo\n      ? memo[key]\n      : f.apply(null, args);\n  };\n};\nmodule.exports = {\n  curry: curry,\n  flip: flip,\n  fix: fix,\n  apply: apply,\n  over: over,\n  memoize: memoize\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.4.0\nvar each, map, compact, filter, reject, partition, find, head, first, tail, last, initial, empty, reverse, unique, uniqueBy, fold, foldl, fold1, foldl1, foldr, foldr1, unfoldr, concat, concatMap, flatten, difference, intersection, union, countBy, groupBy, andList, orList, any, all, sort, sortWith, sortBy, sum, product, mean, average, maximum, minimum, maximumBy, minimumBy, scan, scanl, scan1, scanl1, scanr, scanr1, slice, take, drop, splitAt, takeWhile, dropWhile, span, breakList, zip, zipWith, zipAll, zipAllWith, at, elemIndex, elemIndices, findIndex, findIndices, toString$ = {}.toString, slice$ = [].slice;\neach = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    f(x);\n  }\n  return xs;\n});\nmap = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    results$.push(f(x));\n  }\n  return results$;\n});\ncompact = function(xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (x) {\n      results$.push(x);\n    }\n  }\n  return results$;\n};\nfilter = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      results$.push(x);\n    }\n  }\n  return results$;\n});\nreject = curry$(function(f, xs){\n  var i$, len$, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!f(x)) {\n      results$.push(x);\n    }\n  }\n  return results$;\n});\npartition = curry$(function(f, xs){\n  var passed, failed, i$, len$, x;\n  passed = [];\n  failed = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    (f(x) ? passed : failed).push(x);\n  }\n  return [passed, failed];\n});\nfind = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      return x;\n    }\n  }\n});\nhead = first = function(xs){\n  return xs[0];\n};\ntail = function(xs){\n  if (!xs.length) {\n    return;\n  }\n  return xs.slice(1);\n};\nlast = function(xs){\n  return xs[xs.length - 1];\n};\ninitial = function(xs){\n  if (!xs.length) {\n    return;\n  }\n  return xs.slice(0, -1);\n};\nempty = function(xs){\n  return !xs.length;\n};\nreverse = function(xs){\n  return xs.concat().reverse();\n};\nunique = function(xs){\n  var result, i$, len$, x;\n  result = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!in$(x, result)) {\n      result.push(x);\n    }\n  }\n  return result;\n};\nuniqueBy = curry$(function(f, xs){\n  var seen, i$, len$, x, val, results$ = [];\n  seen = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    val = f(x);\n    if (in$(val, seen)) {\n      continue;\n    }\n    seen.push(val);\n    results$.push(x);\n  }\n  return results$;\n});\nfold = foldl = curry$(function(f, memo, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    memo = f(memo, x);\n  }\n  return memo;\n});\nfold1 = foldl1 = curry$(function(f, xs){\n  return fold(f, xs[0], xs.slice(1));\n});\nfoldr = curry$(function(f, memo, xs){\n  var i$, x;\n  for (i$ = xs.length - 1; i$ >= 0; --i$) {\n    x = xs[i$];\n    memo = f(x, memo);\n  }\n  return memo;\n});\nfoldr1 = curry$(function(f, xs){\n  return foldr(f, xs[xs.length - 1], xs.slice(0, -1));\n});\nunfoldr = curry$(function(f, b){\n  var result, x, that;\n  result = [];\n  x = b;\n  while ((that = f(x)) != null) {\n    result.push(that[0]);\n    x = that[1];\n  }\n  return result;\n});\nconcat = function(xss){\n  return [].concat.apply([], xss);\n};\nconcatMap = curry$(function(f, xs){\n  var x;\n  return [].concat.apply([], (function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      results$.push(f(x));\n    }\n    return results$;\n  }()));\n});\nflatten = function(xs){\n  var x;\n  return [].concat.apply([], (function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      if (toString$.call(x).slice(8, -1) === 'Array') {\n        results$.push(flatten(x));\n      } else {\n        results$.push(x);\n      }\n    }\n    return results$;\n  }()));\n};\ndifference = function(xs){\n  var yss, results, i$, len$, x, j$, len1$, ys;\n  yss = slice$.call(arguments, 1);\n  results = [];\n  outer: for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    for (j$ = 0, len1$ = yss.length; j$ < len1$; ++j$) {\n      ys = yss[j$];\n      if (in$(x, ys)) {\n        continue outer;\n      }\n    }\n    results.push(x);\n  }\n  return results;\n};\nintersection = function(xs){\n  var yss, results, i$, len$, x, j$, len1$, ys;\n  yss = slice$.call(arguments, 1);\n  results = [];\n  outer: for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    for (j$ = 0, len1$ = yss.length; j$ < len1$; ++j$) {\n      ys = yss[j$];\n      if (!in$(x, ys)) {\n        continue outer;\n      }\n    }\n    results.push(x);\n  }\n  return results;\n};\nunion = function(){\n  var xss, results, i$, len$, xs, j$, len1$, x;\n  xss = slice$.call(arguments);\n  results = [];\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    for (j$ = 0, len1$ = xs.length; j$ < len1$; ++j$) {\n      x = xs[j$];\n      if (!in$(x, results)) {\n        results.push(x);\n      }\n    }\n  }\n  return results;\n};\ncountBy = curry$(function(f, xs){\n  var results, i$, len$, x, key;\n  results = {};\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    key = f(x);\n    if (key in results) {\n      results[key] += 1;\n    } else {\n      results[key] = 1;\n    }\n  }\n  return results;\n});\ngroupBy = curry$(function(f, xs){\n  var results, i$, len$, x, key;\n  results = {};\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    key = f(x);\n    if (key in results) {\n      results[key].push(x);\n    } else {\n      results[key] = [x];\n    }\n  }\n  return results;\n});\nandList = function(xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!x) {\n      return false;\n    }\n  }\n  return true;\n};\norList = function(xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (x) {\n      return true;\n    }\n  }\n  return false;\n};\nany = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (f(x)) {\n      return true;\n    }\n  }\n  return false;\n});\nall = curry$(function(f, xs){\n  var i$, len$, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    if (!f(x)) {\n      return false;\n    }\n  }\n  return true;\n});\nsort = function(xs){\n  return xs.concat().sort(function(x, y){\n    if (x > y) {\n      return 1;\n    } else if (x < y) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n};\nsortWith = curry$(function(f, xs){\n  return xs.concat().sort(f);\n});\nsortBy = curry$(function(f, xs){\n  return xs.concat().sort(function(x, y){\n    if (f(x) > f(y)) {\n      return 1;\n    } else if (f(x) < f(y)) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n});\nsum = function(xs){\n  var result, i$, len$, x;\n  result = 0;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    result += x;\n  }\n  return result;\n};\nproduct = function(xs){\n  var result, i$, len$, x;\n  result = 1;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    result *= x;\n  }\n  return result;\n};\nmean = average = function(xs){\n  var sum, i$, len$, x;\n  sum = 0;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    x = xs[i$];\n    sum += x;\n  }\n  return sum / xs.length;\n};\nmaximum = function(xs){\n  var max, i$, ref$, len$, x;\n  max = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (x > max) {\n      max = x;\n    }\n  }\n  return max;\n};\nminimum = function(xs){\n  var min, i$, ref$, len$, x;\n  min = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (x < min) {\n      min = x;\n    }\n  }\n  return min;\n};\nmaximumBy = curry$(function(f, xs){\n  var max, i$, ref$, len$, x;\n  max = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (f(x) > f(max)) {\n      max = x;\n    }\n  }\n  return max;\n});\nminimumBy = curry$(function(f, xs){\n  var min, i$, ref$, len$, x;\n  min = xs[0];\n  for (i$ = 0, len$ = (ref$ = xs.slice(1)).length; i$ < len$; ++i$) {\n    x = ref$[i$];\n    if (f(x) < f(min)) {\n      min = x;\n    }\n  }\n  return min;\n});\nscan = scanl = curry$(function(f, memo, xs){\n  var last, x;\n  last = memo;\n  return [memo].concat((function(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xs).length; i$ < len$; ++i$) {\n      x = ref$[i$];\n      results$.push(last = f(last, x));\n    }\n    return results$;\n  }()));\n});\nscan1 = scanl1 = curry$(function(f, xs){\n  if (!xs.length) {\n    return;\n  }\n  return scan(f, xs[0], xs.slice(1));\n});\nscanr = curry$(function(f, memo, xs){\n  xs = xs.concat().reverse();\n  return scan(f, memo, xs).reverse();\n});\nscanr1 = curry$(function(f, xs){\n  if (!xs.length) {\n    return;\n  }\n  xs = xs.concat().reverse();\n  return scan(f, xs[0], xs.slice(1)).reverse();\n});\nslice = curry$(function(x, y, xs){\n  return xs.slice(x, y);\n});\ntake = curry$(function(n, xs){\n  if (n <= 0) {\n    return xs.slice(0, 0);\n  } else {\n    return xs.slice(0, n);\n  }\n});\ndrop = curry$(function(n, xs){\n  if (n <= 0) {\n    return xs;\n  } else {\n    return xs.slice(n);\n  }\n});\nsplitAt = curry$(function(n, xs){\n  return [take(n, xs), drop(n, xs)];\n});\ntakeWhile = curry$(function(p, xs){\n  var len, i;\n  len = xs.length;\n  if (!len) {\n    return xs;\n  }\n  i = 0;\n  while (i < len && p(xs[i])) {\n    i += 1;\n  }\n  return xs.slice(0, i);\n});\ndropWhile = curry$(function(p, xs){\n  var len, i;\n  len = xs.length;\n  if (!len) {\n    return xs;\n  }\n  i = 0;\n  while (i < len && p(xs[i])) {\n    i += 1;\n  }\n  return xs.slice(i);\n});\nspan = curry$(function(p, xs){\n  return [takeWhile(p, xs), dropWhile(p, xs)];\n});\nbreakList = curry$(function(p, xs){\n  return span(compose$(p, not$), xs);\n});\nzip = curry$(function(xs, ys){\n  var result, len, i$, len$, i, x;\n  result = [];\n  len = ys.length;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (i === len) {\n      break;\n    }\n    result.push([x, ys[i]]);\n  }\n  return result;\n});\nzipWith = curry$(function(f, xs, ys){\n  var result, len, i$, len$, i, x;\n  result = [];\n  len = ys.length;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (i === len) {\n      break;\n    }\n    result.push(f(x, ys[i]));\n  }\n  return result;\n});\nzipAll = function(){\n  var xss, minLength, i$, len$, xs, ref$, i, lresult$, j$, results$ = [];\n  xss = slice$.call(arguments);\n  minLength = undefined;\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    minLength <= (ref$ = xs.length) || (minLength = ref$);\n  }\n  for (i$ = 0; i$ < minLength; ++i$) {\n    i = i$;\n    lresult$ = [];\n    for (j$ = 0, len$ = xss.length; j$ < len$; ++j$) {\n      xs = xss[j$];\n      lresult$.push(xs[i]);\n    }\n    results$.push(lresult$);\n  }\n  return results$;\n};\nzipAllWith = function(f){\n  var xss, minLength, i$, len$, xs, ref$, i, results$ = [];\n  xss = slice$.call(arguments, 1);\n  minLength = undefined;\n  for (i$ = 0, len$ = xss.length; i$ < len$; ++i$) {\n    xs = xss[i$];\n    minLength <= (ref$ = xs.length) || (minLength = ref$);\n  }\n  for (i$ = 0; i$ < minLength; ++i$) {\n    i = i$;\n    results$.push(f.apply(null, (fn$())));\n  }\n  return results$;\n  function fn$(){\n    var i$, ref$, len$, results$ = [];\n    for (i$ = 0, len$ = (ref$ = xss).length; i$ < len$; ++i$) {\n      xs = ref$[i$];\n      results$.push(xs[i]);\n    }\n    return results$;\n  }\n};\nat = curry$(function(n, xs){\n  if (n < 0) {\n    return xs[xs.length + n];\n  } else {\n    return xs[n];\n  }\n});\nelemIndex = curry$(function(el, xs){\n  var i$, len$, i, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (x === el) {\n      return i;\n    }\n  }\n});\nelemIndices = curry$(function(el, xs){\n  var i$, len$, i, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (x === el) {\n      results$.push(i);\n    }\n  }\n  return results$;\n});\nfindIndex = curry$(function(f, xs){\n  var i$, len$, i, x;\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (f(x)) {\n      return i;\n    }\n  }\n});\nfindIndices = curry$(function(f, xs){\n  var i$, len$, i, x, results$ = [];\n  for (i$ = 0, len$ = xs.length; i$ < len$; ++i$) {\n    i = i$;\n    x = xs[i$];\n    if (f(x)) {\n      results$.push(i);\n    }\n  }\n  return results$;\n});\nmodule.exports = {\n  each: each,\n  map: map,\n  filter: filter,\n  compact: compact,\n  reject: reject,\n  partition: partition,\n  find: find,\n  head: head,\n  first: first,\n  tail: tail,\n  last: last,\n  initial: initial,\n  empty: empty,\n  reverse: reverse,\n  difference: difference,\n  intersection: intersection,\n  union: union,\n  countBy: countBy,\n  groupBy: groupBy,\n  fold: fold,\n  fold1: fold1,\n  foldl: foldl,\n  foldl1: foldl1,\n  foldr: foldr,\n  foldr1: foldr1,\n  unfoldr: unfoldr,\n  andList: andList,\n  orList: orList,\n  any: any,\n  all: all,\n  unique: unique,\n  uniqueBy: uniqueBy,\n  sort: sort,\n  sortWith: sortWith,\n  sortBy: sortBy,\n  sum: sum,\n  product: product,\n  mean: mean,\n  average: average,\n  concat: concat,\n  concatMap: concatMap,\n  flatten: flatten,\n  maximum: maximum,\n  minimum: minimum,\n  maximumBy: maximumBy,\n  minimumBy: minimumBy,\n  scan: scan,\n  scan1: scan1,\n  scanl: scanl,\n  scanl1: scanl1,\n  scanr: scanr,\n  scanr1: scanr1,\n  slice: slice,\n  take: take,\n  drop: drop,\n  splitAt: splitAt,\n  takeWhile: takeWhile,\n  dropWhile: dropWhile,\n  span: span,\n  breakList: breakList,\n  zip: zip,\n  zipWith: zipWith,\n  zipAll: zipAll,\n  zipAllWith: zipAllWith,\n  at: at,\n  elemIndex: elemIndex,\n  elemIndices: elemIndices,\n  findIndex: findIndex,\n  findIndices: findIndices\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}\nfunction in$(x, xs){\n  var i = -1, l = xs.length >>> 0;\n  while (++i < l) if (x === xs[i]) return true;\n  return false;\n}\nfunction compose$() {\n  var functions = arguments;\n  return function() {\n    var i, result;\n    result = functions[0].apply(this, arguments);\n    for (i = 1; i < functions.length; ++i) {\n      result = functions[i](result);\n    }\n    return result;\n  };\n}\nfunction not$(x){ return !x; }","// Generated by LiveScript 1.4.0\nvar values, keys, pairsToObj, objToPairs, listsToObj, objToLists, empty, each, map, compact, filter, reject, partition, find;\nvalues = function(object){\n  var i$, x, results$ = [];\n  for (i$ in object) {\n    x = object[i$];\n    results$.push(x);\n  }\n  return results$;\n};\nkeys = function(object){\n  var x, results$ = [];\n  for (x in object) {\n    results$.push(x);\n  }\n  return results$;\n};\npairsToObj = function(object){\n  var i$, len$, x, resultObj$ = {};\n  for (i$ = 0, len$ = object.length; i$ < len$; ++i$) {\n    x = object[i$];\n    resultObj$[x[0]] = x[1];\n  }\n  return resultObj$;\n};\nobjToPairs = function(object){\n  var key, value, results$ = [];\n  for (key in object) {\n    value = object[key];\n    results$.push([key, value]);\n  }\n  return results$;\n};\nlistsToObj = curry$(function(keys, values){\n  var i$, len$, i, key, resultObj$ = {};\n  for (i$ = 0, len$ = keys.length; i$ < len$; ++i$) {\n    i = i$;\n    key = keys[i$];\n    resultObj$[key] = values[i];\n  }\n  return resultObj$;\n});\nobjToLists = function(object){\n  var keys, values, key, value;\n  keys = [];\n  values = [];\n  for (key in object) {\n    value = object[key];\n    keys.push(key);\n    values.push(value);\n  }\n  return [keys, values];\n};\nempty = function(object){\n  var x;\n  for (x in object) {\n    return false;\n  }\n  return true;\n};\neach = curry$(function(f, object){\n  var i$, x;\n  for (i$ in object) {\n    x = object[i$];\n    f(x);\n  }\n  return object;\n});\nmap = curry$(function(f, object){\n  var k, x, resultObj$ = {};\n  for (k in object) {\n    x = object[k];\n    resultObj$[k] = f(x);\n  }\n  return resultObj$;\n});\ncompact = function(object){\n  var k, x, resultObj$ = {};\n  for (k in object) {\n    x = object[k];\n    if (x) {\n      resultObj$[k] = x;\n    }\n  }\n  return resultObj$;\n};\nfilter = curry$(function(f, object){\n  var k, x, resultObj$ = {};\n  for (k in object) {\n    x = object[k];\n    if (f(x)) {\n      resultObj$[k] = x;\n    }\n  }\n  return resultObj$;\n});\nreject = curry$(function(f, object){\n  var k, x, resultObj$ = {};\n  for (k in object) {\n    x = object[k];\n    if (!f(x)) {\n      resultObj$[k] = x;\n    }\n  }\n  return resultObj$;\n});\npartition = curry$(function(f, object){\n  var passed, failed, k, x;\n  passed = {};\n  failed = {};\n  for (k in object) {\n    x = object[k];\n    (f(x) ? passed : failed)[k] = x;\n  }\n  return [passed, failed];\n});\nfind = curry$(function(f, object){\n  var i$, x;\n  for (i$ in object) {\n    x = object[i$];\n    if (f(x)) {\n      return x;\n    }\n  }\n});\nmodule.exports = {\n  values: values,\n  keys: keys,\n  pairsToObj: pairsToObj,\n  objToPairs: objToPairs,\n  listsToObj: listsToObj,\n  objToLists: objToLists,\n  empty: empty,\n  each: each,\n  map: map,\n  filter: filter,\n  compact: compact,\n  reject: reject,\n  partition: partition,\n  find: find\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.4.0\nvar split, join, lines, unlines, words, unwords, chars, unchars, reverse, repeat, capitalize, camelize, dasherize;\nsplit = curry$(function(sep, str){\n  return str.split(sep);\n});\njoin = curry$(function(sep, xs){\n  return xs.join(sep);\n});\nlines = function(str){\n  if (!str.length) {\n    return [];\n  }\n  return str.split('\\n');\n};\nunlines = function(it){\n  return it.join('\\n');\n};\nwords = function(str){\n  if (!str.length) {\n    return [];\n  }\n  return str.split(/[ ]+/);\n};\nunwords = function(it){\n  return it.join(' ');\n};\nchars = function(it){\n  return it.split('');\n};\nunchars = function(it){\n  return it.join('');\n};\nreverse = function(str){\n  return str.split('').reverse().join('');\n};\nrepeat = curry$(function(n, str){\n  var result, i$;\n  result = '';\n  for (i$ = 0; i$ < n; ++i$) {\n    result += str;\n  }\n  return result;\n});\ncapitalize = function(str){\n  return str.charAt(0).toUpperCase() + str.slice(1);\n};\ncamelize = function(it){\n  return it.replace(/[-_]+(.)?/g, function(arg$, c){\n    return (c != null ? c : '').toUpperCase();\n  });\n};\ndasherize = function(str){\n  return str.replace(/([^-A-Z])([A-Z]+)/g, function(arg$, lower, upper){\n    return lower + \"-\" + (upper.length > 1\n      ? upper\n      : upper.toLowerCase());\n  }).replace(/^([A-Z]+)/, function(arg$, upper){\n    if (upper.length > 1) {\n      return upper + \"-\";\n    } else {\n      return upper.toLowerCase();\n    }\n  });\n};\nmodule.exports = {\n  split: split,\n  join: join,\n  lines: lines,\n  unlines: unlines,\n  words: words,\n  unwords: unwords,\n  chars: chars,\n  unchars: unchars,\n  reverse: reverse,\n  repeat: repeat,\n  capitalize: capitalize,\n  camelize: camelize,\n  dasherize: dasherize\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.4.0\nvar max, min, negate, abs, signum, quot, rem, div, mod, recip, pi, tau, exp, sqrt, ln, pow, sin, tan, cos, asin, acos, atan, atan2, truncate, round, ceiling, floor, isItNaN, even, odd, gcd, lcm;\nmax = curry$(function(x$, y$){\n  return x$ > y$ ? x$ : y$;\n});\nmin = curry$(function(x$, y$){\n  return x$ < y$ ? x$ : y$;\n});\nnegate = function(x){\n  return -x;\n};\nabs = Math.abs;\nsignum = function(x){\n  if (x < 0) {\n    return -1;\n  } else if (x > 0) {\n    return 1;\n  } else {\n    return 0;\n  }\n};\nquot = curry$(function(x, y){\n  return ~~(x / y);\n});\nrem = curry$(function(x$, y$){\n  return x$ % y$;\n});\ndiv = curry$(function(x, y){\n  return Math.floor(x / y);\n});\nmod = curry$(function(x$, y$){\n  var ref$;\n  return (((x$) % (ref$ = y$) + ref$) % ref$);\n});\nrecip = (function(it){\n  return 1 / it;\n});\npi = Math.PI;\ntau = pi * 2;\nexp = Math.exp;\nsqrt = Math.sqrt;\nln = Math.log;\npow = curry$(function(x$, y$){\n  return Math.pow(x$, y$);\n});\nsin = Math.sin;\ntan = Math.tan;\ncos = Math.cos;\nasin = Math.asin;\nacos = Math.acos;\natan = Math.atan;\natan2 = curry$(function(x, y){\n  return Math.atan2(x, y);\n});\ntruncate = function(x){\n  return ~~x;\n};\nround = Math.round;\nceiling = Math.ceil;\nfloor = Math.floor;\nisItNaN = function(x){\n  return x !== x;\n};\neven = function(x){\n  return x % 2 === 0;\n};\nodd = function(x){\n  return x % 2 !== 0;\n};\ngcd = curry$(function(x, y){\n  var z;\n  x = Math.abs(x);\n  y = Math.abs(y);\n  while (y !== 0) {\n    z = x % y;\n    x = y;\n    y = z;\n  }\n  return x;\n});\nlcm = curry$(function(x, y){\n  return Math.abs(Math.floor(x / gcd(x, y) * y));\n});\nmodule.exports = {\n  max: max,\n  min: min,\n  negate: negate,\n  abs: abs,\n  signum: signum,\n  quot: quot,\n  rem: rem,\n  div: div,\n  mod: mod,\n  recip: recip,\n  pi: pi,\n  tau: tau,\n  exp: exp,\n  sqrt: sqrt,\n  ln: ln,\n  pow: pow,\n  sin: sin,\n  tan: tan,\n  cos: cos,\n  acos: acos,\n  asin: asin,\n  atan: atan,\n  atan2: atan2,\n  truncate: truncate,\n  round: round,\n  ceiling: ceiling,\n  floor: floor,\n  isItNaN: isItNaN,\n  even: even,\n  odd: odd,\n  gcd: gcd,\n  lcm: lcm\n};\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","// Generated by LiveScript 1.4.0\nvar Func, List, Obj, Str, Num, id, isType, replicate, prelude, toString$ = {}.toString;\nFunc = require('./Func.js');\nList = require('./List.js');\nObj = require('./Obj.js');\nStr = require('./Str.js');\nNum = require('./Num.js');\nid = function(x){\n  return x;\n};\nisType = curry$(function(type, x){\n  return toString$.call(x).slice(8, -1) === type;\n});\nreplicate = curry$(function(n, x){\n  var i$, results$ = [];\n  for (i$ = 0; i$ < n; ++i$) {\n    results$.push(x);\n  }\n  return results$;\n});\nStr.empty = List.empty;\nStr.slice = List.slice;\nStr.take = List.take;\nStr.drop = List.drop;\nStr.splitAt = List.splitAt;\nStr.takeWhile = List.takeWhile;\nStr.dropWhile = List.dropWhile;\nStr.span = List.span;\nStr.breakStr = List.breakList;\nprelude = {\n  Func: Func,\n  List: List,\n  Obj: Obj,\n  Str: Str,\n  Num: Num,\n  id: id,\n  isType: isType,\n  replicate: replicate\n};\nprelude.each = List.each;\nprelude.map = List.map;\nprelude.filter = List.filter;\nprelude.compact = List.compact;\nprelude.reject = List.reject;\nprelude.partition = List.partition;\nprelude.find = List.find;\nprelude.head = List.head;\nprelude.first = List.first;\nprelude.tail = List.tail;\nprelude.last = List.last;\nprelude.initial = List.initial;\nprelude.empty = List.empty;\nprelude.reverse = List.reverse;\nprelude.difference = List.difference;\nprelude.intersection = List.intersection;\nprelude.union = List.union;\nprelude.countBy = List.countBy;\nprelude.groupBy = List.groupBy;\nprelude.fold = List.fold;\nprelude.foldl = List.foldl;\nprelude.fold1 = List.fold1;\nprelude.foldl1 = List.foldl1;\nprelude.foldr = List.foldr;\nprelude.foldr1 = List.foldr1;\nprelude.unfoldr = List.unfoldr;\nprelude.andList = List.andList;\nprelude.orList = List.orList;\nprelude.any = List.any;\nprelude.all = List.all;\nprelude.unique = List.unique;\nprelude.uniqueBy = List.uniqueBy;\nprelude.sort = List.sort;\nprelude.sortWith = List.sortWith;\nprelude.sortBy = List.sortBy;\nprelude.sum = List.sum;\nprelude.product = List.product;\nprelude.mean = List.mean;\nprelude.average = List.average;\nprelude.concat = List.concat;\nprelude.concatMap = List.concatMap;\nprelude.flatten = List.flatten;\nprelude.maximum = List.maximum;\nprelude.minimum = List.minimum;\nprelude.maximumBy = List.maximumBy;\nprelude.minimumBy = List.minimumBy;\nprelude.scan = List.scan;\nprelude.scanl = List.scanl;\nprelude.scan1 = List.scan1;\nprelude.scanl1 = List.scanl1;\nprelude.scanr = List.scanr;\nprelude.scanr1 = List.scanr1;\nprelude.slice = List.slice;\nprelude.take = List.take;\nprelude.drop = List.drop;\nprelude.splitAt = List.splitAt;\nprelude.takeWhile = List.takeWhile;\nprelude.dropWhile = List.dropWhile;\nprelude.span = List.span;\nprelude.breakList = List.breakList;\nprelude.zip = List.zip;\nprelude.zipWith = List.zipWith;\nprelude.zipAll = List.zipAll;\nprelude.zipAllWith = List.zipAllWith;\nprelude.at = List.at;\nprelude.elemIndex = List.elemIndex;\nprelude.elemIndices = List.elemIndices;\nprelude.findIndex = List.findIndex;\nprelude.findIndices = List.findIndices;\nprelude.apply = Func.apply;\nprelude.curry = Func.curry;\nprelude.flip = Func.flip;\nprelude.fix = Func.fix;\nprelude.over = Func.over;\nprelude.split = Str.split;\nprelude.join = Str.join;\nprelude.lines = Str.lines;\nprelude.unlines = Str.unlines;\nprelude.words = Str.words;\nprelude.unwords = Str.unwords;\nprelude.chars = Str.chars;\nprelude.unchars = Str.unchars;\nprelude.repeat = Str.repeat;\nprelude.capitalize = Str.capitalize;\nprelude.camelize = Str.camelize;\nprelude.dasherize = Str.dasherize;\nprelude.values = Obj.values;\nprelude.keys = Obj.keys;\nprelude.pairsToObj = Obj.pairsToObj;\nprelude.objToPairs = Obj.objToPairs;\nprelude.listsToObj = Obj.listsToObj;\nprelude.objToLists = Obj.objToLists;\nprelude.max = Num.max;\nprelude.min = Num.min;\nprelude.negate = Num.negate;\nprelude.abs = Num.abs;\nprelude.signum = Num.signum;\nprelude.quot = Num.quot;\nprelude.rem = Num.rem;\nprelude.div = Num.div;\nprelude.mod = Num.mod;\nprelude.recip = Num.recip;\nprelude.pi = Num.pi;\nprelude.tau = Num.tau;\nprelude.exp = Num.exp;\nprelude.sqrt = Num.sqrt;\nprelude.ln = Num.ln;\nprelude.pow = Num.pow;\nprelude.sin = Num.sin;\nprelude.tan = Num.tan;\nprelude.cos = Num.cos;\nprelude.acos = Num.acos;\nprelude.asin = Num.asin;\nprelude.atan = Num.atan;\nprelude.atan2 = Num.atan2;\nprelude.truncate = Num.truncate;\nprelude.round = Num.round;\nprelude.ceiling = Num.ceiling;\nprelude.floor = Num.floor;\nprelude.isItNaN = Num.isItNaN;\nprelude.even = Num.even;\nprelude.odd = Num.odd;\nprelude.gcd = Num.gcd;\nprelude.lcm = Num.lcm;\nprelude.VERSION = '1.1.2';\nmodule.exports = prelude;\nfunction curry$(f, bound){\n  var context,\n  _curry = function(args) {\n    return f.length > 1 ? function(){\n      var params = args ? args.concat() : [];\n      context = bound ? context || this : this;\n      return params.push.apply(params, arguments) <\n          f.length && arguments.length ?\n        _curry.call(context, params) : f.apply(context, params);\n    } : f;\n  };\n  return _curry();\n}","const { span } = require('prelude-ls');\n\nconst CountdownTimer = {\n  selector: '#timer-1',\n  targetDate: new Date('Jul 17, 2019'),\n};\n\nconst daysHTML = document.querySelector('span[data-value=\"days\"]');\nconst hoursHTML = document.querySelector('span[data-value=\"hours\"]');\nconst minsHTML = document.querySelector('span[data-value=\"mins\"]');\nconst secsHTML = document.querySelector('span[data-value=\"secs\"]');\n\nfunction getTime(time) {\n  const days = Math.floor(time / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60));\n  const secs = Math.floor((time % (1000 * 60)) / 1000);\n\n  return { days, hours, mins, secs };\n}\nsetInterval(() => {\n  const currentTime = Date.now();\n  const time = CountdownTimer.targetDate - currentTime;\n  console.log(getTime(time));\n\n  daysHTML.textContent = getTime(time).days;\n  hoursHTML.textContent = getTime(time).hours;\n  minsHTML.textContent = getTime(time).mins;\n  secsHTML.textContent = getTime(time).secs;\n}, 1000);\n"]}